<?php
function _kw_djambi_check_flood() {
  if (!flood_is_allowed('registration', 5)) {
    drupal_set_message(t('Too many registration failures : you are not allowed to register now.'), 'error');
    drupal_access_denied();
    die;
  }
}

function kw_djambi_captcha_form_user_register_form_alter(&$form, &$form_state) {
  global $user;
  if ($user->uid > 0) {
    return;
  }
  _kw_djambi_check_flood();
  form_load_include($form_state, 'inc', 'kw_djambi', 'kw_djambi.form');
  if (!empty($form_state['kw_djambi']['selected_piece']) && !$form_state['kw_djambi']['change_turn']) {
    $piece = $form_state['kw_djambi']['selected_piece'];
    $grid = $piece->getFaction()->getBattlefield();
  }
  elseif (isset($form_state['saved_grid'])) {
    if (isset($form_state['kw_djambi']['change_turn'])) {
      unset($form_state['kw_djambi']);
    }
    $grid = new DjambiBattlefield($form_state['saved_grid']);
    $grid->play();
  }
  else {
    $grid = new DjambiBattlefield(array(
      'mode' => KW_DJAMBI_MODE_TRAINING,
      'disposition' => '2mini',
      'savable' => FALSE,
      'computers' => array(
        2 => 'DjambiIADummy'
      ),
      'is_new' => TRUE,
    ));
    $grid->setOption('turns_before_draw_proposal', -1);
    $grid->setInfo('interface', 'minimal');
    $grid->play();
  }
  _kw_djambi_build_game_form($form, $form_state, $grid, array(
    'show_rules' => FALSE,
    'show_stats' => FALSE,
    'show_log' => FALSE,
  ));
  if (!$grid->isFinished()) {
    $game_status_msg = '<div class="messages warning">' . t("You have to beat a dummy computer opponent in a mini djambi game to complete your registration !") . ' </div>';
  }
  elseif ($form_state['kw_djambi']['result'] == KW_DJAMBI_USER_WINNER) {
    $game_status_msg = '<div class="messages status">' . t("Congratulations, you are smarter than a dummy computer. You can now complete your registration.") . ' </div>';
  }
  else {
    $game_status_msg = '<div class="messages error">' . t("Shame on you, you failed beating a dummy computer.") . ' </div>';
    $form['grid']['retry'] = array(
        '#type' => 'submit',
        '#limit_validation_errors' => array(),
        '#submit' => array('kw_djambi_captcha_retry_submit'),
        '#value' => t('Try again...'),
        '#weight' => -19
    );
  }
  $form['grid']['captcha'] = array(
      '#weight' => -20,
      '#markup' => $game_status_msg
  );
  $form['grid']['#weight'] = 1;
  $form['#validate'][] = 'kw_djambi_captcha_registration_validate';
}

function kw_djambi_captcha_registration_validate($form, &$form_state) {
  $errors = FALSE;
  $clicked_button_family = $form_state['clicked_button']['#array_parents'][0];
  if (!isset($form_state['kw_djambi']['result'])) {
    form_set_error('grid', t("Computer is still alive !"));
    if (!empty($form_state['values']['name']) && $clicked_button_family != 'grid') {
      __debug($clicked_button_family);
      watchdog('djambi', 'User !name (!mail) tried to register without finishing Djambi game validation.',
      array('!name' => $form_state['values']['name'], '!mail' => $form_state['values']['mail']), WATCHDOG_WARNING);
      flood_register_event('registration', 3600);
      $errors = TRUE;
    }
  }
  elseif ($form_state['kw_djambi']['result'] != KW_DJAMBI_USER_WINNER) {
    form_set_error('grid', t("You are not smart enough to register."));
    if (!empty($form_state['values']['name']) && $clicked_button_family != 'grid') {
      watchdog('djambi', 'User !name (!mail) failed succeeding in Djambi game registration validation.',
      array('!name' => $form_state['values']['name'], '!mail' => $form_state['values']['mail']), WATCHDOG_WARNING);
      flood_register_event('registration', 3600);
      $errors = TRUE;
    }
  }
  if ($errors) {
    _kw_djambi_check_flood();
  }
}

function kw_djambi_captcha_retry_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
  unset($form_state['saved_grid']);
  unset($form_state['kw_djambi']);
}