<?php
/**
 * @file
 * Ajoute une mini-partie de Djambi sur certaines actions (pour l'instant :
 * création de nouveau compte) pour éviter les actions de spam bots.
 */

use Drupal\kw_djambi\Djambi\Factories\DjambiCaptchaGameFactory;

/**
 * Vérifie si l'utilisateur courant n'effectue pas trop de requêtes incorrectes.
 */
function _djambi_captcha_check_flood() {
  if (!flood_is_allowed('registration', 5)) {
    drupal_set_message(t('Too many registration failures : you are not allowed to register now.'), 'error');
    drupal_access_denied();
    die();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function djambi_captcha_form_user_register_form_alter(&$form, &$form_state) {
  _djambi_captcha_check_flood();
  $factory = new DjambiCaptchaGameFactory();
  $game = $factory->generateGameUsingDrupalForm($form, $form_state, array(
    'show_rules' => FALSE,
    'show_stats' => FALSE,
    'show_log' => FALSE,
  ));
  if (!$game->isFinished()) {
    $game_status_msg = '<div class="messages warning">'
      . t("You have to beat a dummy computer opponent in a mini djambi game to complete your registration !") . ' </div>';
  }
  elseif ($form_state['djambi']['result'] == \Djambi\Faction::STATUS_WINNER) {
    $game_status_msg = '<div class="messages status">'
      . t("Congratulations, you are smarter than a dummy computer. You can now complete your registration.") . ' </div>';
  }
  else {
    $game_status_msg = '<div class="messages error">'
      . t("Shame on you, you failed beating a dummy computer.") . ' </div>';
    $form['grid']['retry'] = array(
      '#type' => 'submit',
      '#limit_validation_errors' => array(),
      '#submit' => array('djambi_captcha_retry_submit'),
      '#value' => t('Try again...'),
      '#weight' => -19,
    );
  }
  $form['grid']['messages'] = array(
    '#markup' => $game_status_msg,
    '#weight' => -20,
  );
  $form['#validate'][] = 'djambi_captcha_registration_validate';
}

/**
 * Fonction de validation supplémentaire sur la création de compte.
 */
function djambi_captcha_registration_validate($form, &$form_state) {
  $errors = FALSE;
  $clicked_button_family = $form_state['clicked_button']['#array_parents'][0];
  if (!isset($form_state['djambi']['result'])) {
    form_set_error('grid', t("Computer is still alive !"));
    if (!empty($form_state['values']['name']) && $clicked_button_family != 'grid') {
      watchdog('djambi', 'User !name (!mail) tried to register without finishing Djambi game validation.',
      array('!name' => $form_state['values']['name'], '!mail' => $form_state['values']['mail']), WATCHDOG_NOTICE);
      flood_register_event('registration', 3600);
      $errors = TRUE;
    }
  }
  elseif ($form_state['djambi']['result'] != \Djambi\Faction::STATUS_WINNER) {
    form_set_error('grid', t("You are not smart enough to register."));
    if (!empty($form_state['values']['name']) && $clicked_button_family != 'grid') {
      watchdog('djambi', 'User !name (!mail) failed succeeding in Djambi game registration validation.',
      array('!name' => $form_state['values']['name'], '!mail' => $form_state['values']['mail']), WATCHDOG_NOTICE);
      flood_register_event('registration', 3600);
      $errors = TRUE;
    }
  }
  if ($errors) {
    _djambi_captcha_check_flood();
  }
}

/**
 * Soumission du bouton "Recommencer la partie".
 */
function djambi_captcha_retry_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
  unset($form_state['djambi']);
}
